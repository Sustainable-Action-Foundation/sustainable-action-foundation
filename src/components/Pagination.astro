---
    const length: number = 1
    const current_index: number = 1
    const initial_route: Route = { text: 'nyheter', href: '/nyheter' } 

    function returnIndices(length: number, current_index: number): Array<number> {

        if (current_index > length) {
            throw new Error(`Invalid input: current_index (${current_index}) cannot be larger than length (${length}).`);
        }

        let indices: Array<number>;

        if (current_index == 1 || current_index == 2) {
            indices = [1, 2, 3, 4, length];
        } else if (current_index + 2 >= length - 1 || current_index == length) {
            indices = [1, length - 3, length - 2, length - 1, length];
        } else {
            indices = [1, current_index, current_index + 1, current_index + 2, length];
        }

        // Filter values to include only those <= length, > 1 and remove duplicates
        return [...new Set(indices.filter(index => index >= 1 && index <= length))];
    }

    console.log(returnIndices(length, current_index))

---

<nav class="flex gap-50 align-items-center">
    {current_index > 1 ? 
        <a href={`${initial_route.href}/${current_index - 1}`} class="grid">
            <img src="/icons/arrow-narrow-left.svg" alt="" class="margin-right-100" />
        </a>
    :
        <a href={`${initial_route.href}/${current_index}`} class="grid">
            <img src="/icons/arrow-narrow-left.svg" alt="" class="margin-right-100" />
        </a> 
    }

    {returnIndices(length, current_index).map((index: number) => (
        <a href={`${initial_route.href}/${index}`}>{index}</a>
    ))}

    {current_index != length ? 
        <a href={`${initial_route.href}/${current_index + 1}`} class="grid">
            <img src="/icons/arrow-narrow-right.svg" alt="" class="margin-left-100" />
        </a>
    : 
        <a href={`${initial_route.href}/${current_index}`} class="grid">
            <img src="/icons/arrow-narrow-right.svg" alt="" class="margin-left-100" />
        </a>
    }
</nav>

<style>
    a {
        text-decoration: none;
        color: black;
    }

    a:hover {
        text-decoration: underline;
    }

</style>
